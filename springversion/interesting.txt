mvn install

in order to have maven automatically decide versions of packages you need to add a parent

in this case:
<parent>
  <groupId> org.springframework.boot </groupId>
  <artifactId> spring-boot-starter-parent </artifactId>
  <version> 3.5.3 </version>
  <relativePath/>
</parent>

Hibernate is not a good automatic ORM generator like C# EntityFramework and JS Drizzle, anyway its supposed to work like this:
mvn org.hibernate.tool:hibernate-tools-maven:7.1.0.Final:hbm2java 

but it somehow only sees tables, not columns so it can't load anything anyway
I will try jOOQ

jOOQ
lot of paid features, but has an open source version
you are supposed to supply all the .jars and a xml config file in one folder and run:
java -cp r2dbc-spi-1.0.0.RELEASE.jar;reactive-streams-1.0.3.jar;jakarta.xml.bind-api-3.0.1.jar;jooq-3.19.25.jar;jooq-meta-3.19.25.jar;jooq-codegen-3.19.25.jar;reactive-streams-1.0.3.jar;r2dbc-spi-1.0.0.RELEASE.jar;postgresql-42.7.7.jar org.jooq.codegen.GenerationTool jooq-config.xml

the config:
<configuration>
    <jdbc>
        <driver>org.postgresql.Driver</driver>
        <url>jdbc:postgresql://localhost:5432/NotesAppJava</url>
        <user>postgres</user>
        <password>1234</password>
    </jdbc>
    <generator>
        <database>
            <name>org.jooq.meta.postgres.PostgresDatabase</name>
            <includes>public\..*</includes>
            <excludes></excludes>
        </database>
        <target>
            <packageName>com.example.jooq.generated</packageName>
            <directory>src/main/java/notesbackend/generated</directory>
        </target>
    </generator>
</configuration>