/*
 * This file is generated by jOOQ.
 */
package notesbackend.jooq.public_.tables.records;


import notesbackend.jooq.public_.tables.Notes;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotesRecord extends UpdatableRecordImpl<NotesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.notes.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.notes.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.notes.createdAt</code>.
     */
    public void setCreatedat(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.notes.createdAt</code>.
     */
    public LocalDateTime getCreatedat() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.notes.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.notes.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.notes.title</code>.
     */
    public void setTitle(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.notes.title</code>.
     */
    public String getTitle() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.notes.text</code>.
     */
    public void setText(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.notes.text</code>.
     */
    public String getText() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.notes.active</code>.
     */
    public void setActive(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.notes.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotesRecord
     */
    public NotesRecord() {
        super(Notes.NOTES);
    }

    /**
     * Create a detached, initialised NotesRecord
     */
    public NotesRecord(Integer id, LocalDateTime createdat, Integer userId, String title, String text, Boolean active) {
        super(Notes.NOTES);

        setId(id);
        setCreatedat(createdat);
        setUserId(userId);
        setTitle(title);
        setText(text);
        setActive(active);
        resetChangedOnNotNull();
    }
}
