/*
 * This file is generated by jOOQ.
 */
package notesbackend.jooq.public_;


import notesbackend.jooq.public_.tables.Member;
import notesbackend.jooq.public_.tables.Notes;
import notesbackend.jooq.public_.tables.records.MemberRecord;
import notesbackend.jooq.public_.tables.records.NotesRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<MemberRecord> USER_PKEY = Internal.createUniqueKey(Member.MEMBER, DSL.name("user_pkey"), new TableField[] { Member.MEMBER.ID }, true);
    public static final UniqueKey<NotesRecord> NOTES_PKEY = Internal.createUniqueKey(Notes.NOTES, DSL.name("notes_pkey"), new TableField[] { Notes.NOTES.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<NotesRecord, MemberRecord> NOTES__OWNER = Internal.createForeignKey(Notes.NOTES, DSL.name("owner"), new TableField[] { Notes.NOTES.USER_ID }, Keys.USER_PKEY, new TableField[] { Member.MEMBER.ID }, true);
}
